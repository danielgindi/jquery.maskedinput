{"version":3,"file":"jquery.maskedinput.date.js","sources":["src/jquery.maskedinput.core.js","src/jquery.maskedinput.date.js"],"sourcesContent":["'use strict';\r\n\r\nimport $ from 'jquery';\r\n\r\n/**\r\n * @typedef {String} MaskedInput~PartType\r\n * @name MaskedInput~PartType\r\n * @enum {String}\r\n */\r\nconst PartType = {\r\n    /** @const */ NUMBER: 'number',\r\n    /** @const */ TEXT: 'text',\r\n    /** @const */ LABEL: 'label',\r\n};\r\n\r\n/**\r\n * @typedef {Object} MaskedInput~Part\r\n * @property {MaskedInput~PartType} [type] - Type of the field\r\n * @property {String|undefined} [name] - Name for this field\r\n * @property {String|undefined} [ariaLabel] - An ARIA accessibility label\r\n * @property {String|undefined} [text] - Text for this field if it's a LABEL\r\n * @property {String|undefined} [placeholder] - Placeholder for the field\r\n * @property {Number} [length] - Length of the field\r\n * @property {Number} [maxLength] - Maximum length of the field\r\n * @property {Number|undefined} [numericMin] - Minimum numeric value\r\n * @property {Number|undefined} [numericMax] - Maximum numeric value\r\n * @property {Boolean|undefined} [wholeNumber] - Force the number to be whole? (default `false`)\r\n * @property {RegExp|String|function(value:String)|undefined} [validator] - Validator regex or function\r\n * @property {String[]|undefined} [options] - Options to choose from for textual field\r\n * @property {function(value,part:MaskedInput~Part)|undefined} [postProcess] - Function for post processing a value before retrieving by user\r\n * @property {Boolean|Number|undefined} [padding] - Enable padding in value result (default `true`)\r\n * @property {Boolean|undefined} [required] - Is the field required (default `true`)\r\n * @property {String|undefined} [defaultValue] - Default value, used if field is not `required`\r\n * @property {Boolean|undefined} [forcePlaceholderWidth] - Always consider placeholder's width (default `true`)\r\n */\r\n\r\n/**\r\n * @typedef {Object} MaskedInput~Pattern\r\n * @property {RegExp|String} [pattern] - Pattern to recognize in the format\r\n * @property {MaskedInput~PartType} [type] - Type of the field\r\n * @property {String|undefined} [name] - Name for this field\r\n * @property {String|undefined} [ariaLabel] - An ARIA accessibility label\r\n * @property {String|function(match):String|undefined} [text] - Text for this field if it's a LABEL\r\n * @property {String|function(match):String|undefined} [placeholder] - Placeholder for the field\r\n * @property {Number|function(match):Number} [length] - Length of the field\r\n * @property {Number|function(match):Number} [maxLength] - Maximum length of the field\r\n * @property {Number|function(match):Number|undefined} [numericMin] - Minimum numeric value\r\n * @property {Number|function(match):Number|undefined} [numericMax] - Maximum numeric value\r\n * @property {Boolean|undefined} [wholeNumber] - Force the number to be whole? (default `false`)\r\n * @property {RegExp|String|function(value:String)|undefined} [validator] - Validator regex or function\r\n * @property {String[]|function(match):String[]|undefined} [options] - Options to choose from for textual field\r\n * @property {function(value,part:MaskedInput~Part)|undefined} [postProcess] - Function for post processing a value before retrieving by user\r\n * @property {Boolean|Number|function(match):(Boolean|Number)|undefined} [padding] - Enable padding in value result (default `true`)\r\n * @property {Boolean|function(match):Boolean|undefined} [required] - Is the field required (default `true`)\r\n * @property {String|function(match):String|undefined} [defaultValue] - Default value, used if field is not `required`\r\n * @property {Boolean|function(match):Boolean|undefined} [forcePlaceholderWidth] - Always consider placeholder's width (default `true`)\r\n */\r\n\r\n/**\r\n * @typedef {Object} MaskedInput~Options\r\n * @property {String} [format] - Format to show\r\n * @property {Object<String, MaskedInput~Pattern>} [patterns] - Additional patterns to recognize in the format\r\n */\r\nconst defaults = /** @type {MaskedInput.Options} */ {\r\n    patterns: {},\r\n};\r\n\r\nconst execRegexWithLeftovers = function (regex, input, onMatch, onLeftover) {\r\n\r\n    let match, lastIndex = 0;\r\n    regex.lastIndex = 0;\r\n    while ((match = regex.exec(input))) {\r\n\r\n        // Add skipped raw text\r\n        if (match.index > lastIndex) {\r\n            onLeftover(input.substring(lastIndex, match.index));\r\n        }\r\n\r\n        onMatch(match);\r\n\r\n        lastIndex = regex.lastIndex;\r\n    }\r\n\r\n    // Add remaining text\r\n    if (input.length > lastIndex) {\r\n        onLeftover(input.substring(lastIndex, input.length));\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * Get the selection range in an element\r\n * @param {HTMLInputElement} el\r\n * @returns {{begin: Number, end: Number, direction: 'forward'|'backward'|'none'|undefined}}\r\n */\r\nconst getSelectionRange = function (el) {\r\n    let begin, end, direction = 'none';\r\n\r\n    if (el.setSelectionRange) {\r\n\r\n        begin = el.selectionStart;\r\n        end = el.selectionEnd;\r\n        direction = el.selectionDirection;\r\n\r\n    } else if (document.selection && document.selection.createRange) {\r\n\r\n        const range = document.selection.createRange();\r\n        begin = 0 - range.duplicate().moveStart('character', -10000);\r\n        end = begin + range.text.length;\r\n    }\r\n\r\n    return {\r\n        begin : begin,\r\n        end : end,\r\n        direction: direction,\r\n    };\r\n};\r\n\r\n/**\r\n * Set the selection range in an element\r\n * @param {HTMLInputElement} el\r\n * @param {Number|{begin: Number, end: Number, direction: 'forward'|'backward'|'none'|undefined}} begin\r\n * @param {Number?} end\r\n * @param {('forward'|'backward'|'none')?} direction\r\n */\r\nconst setSelectionRange = function (el, begin, end, direction) {\r\n\r\n    if (typeof arguments[1] === 'object' && 'begin' in arguments[1]) {\r\n        begin = arguments[1].begin;\r\n        end = arguments[1].end;\r\n        direction = arguments[1].direction;\r\n    }\r\n\r\n    if (direction === undefined) {\r\n        if (typeof arguments[2] === 'string' &&\r\n            (arguments[2] === 'forward' || arguments[2] === 'backward' || arguments[2] === 'none')) {\r\n            direction = arguments[2];\r\n            end = null;\r\n        }\r\n    }\r\n\r\n    end = end == null ? begin : end;\r\n\r\n    if (el.setSelectionRange) {\r\n        el.setSelectionRange(begin, end, direction);\r\n\r\n    } else {\r\n        if (el.createTextRange) {\r\n            const range = el.createTextRange();\r\n            range.collapse(true);\r\n            range.moveEnd('character', end);\r\n            range.moveStart('character', begin);\r\n            range.select();\r\n        }\r\n    }\r\n\r\n};\r\n\r\nconst repeatChar = function (char, length) {\r\n    let out = '';\r\n    for (let i = 0; i < length; i++) {\r\n        out += char;\r\n    }\r\n    return out;\r\n};\r\n\r\n/**\r\n * @param {String[]} options\r\n * @param {String} term\r\n * @param {Boolean?} closestChoice\r\n * @param {Boolean?} returnFullMatch\r\n * @param {Boolean?} caseSensitive\r\n * @returns {String|undefined}\r\n */\r\nconst findMatchInArray = function (options, term, closestChoice, returnFullMatch, caseSensitive) {\r\n\r\n    let i, option, optionLower;\r\n    const termLower = caseSensitive ? term : term.toLowerCase();\r\n\r\n    if (closestChoice) {\r\n        // Search for a partial option or partial content match, return the longest match found, or `false`\r\n\r\n        let maxMatchLength = 0;\r\n        let maxMatchOption;\r\n        let maxMatchFullOption;\r\n\r\n        for (i = 0; i < options.length; i++) {\r\n            option = options[i];\r\n            optionLower = caseSensitive ? option : option.toLowerCase();\r\n\r\n            for (let clen = Math.min(option.length, 1); clen <= term.length; clen++) {\r\n                if (option.length >= clen &&\r\n                    optionLower.substr(0, clen) === termLower.substr(0, clen)) {\r\n                    if (clen > maxMatchLength) {\r\n                        maxMatchLength = clen;\r\n                        maxMatchOption = option.substr(0, clen);\r\n                        maxMatchFullOption = option;\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return returnFullMatch ? maxMatchFullOption : maxMatchOption;\r\n\r\n    } else {\r\n\r\n        // Search for an exact match or option \"starts with\" the content - all case insensitive\r\n        for (i = 0; i < options.length; i++) {\r\n            option = options[i];\r\n            optionLower = caseSensitive ? option : option.toLowerCase();\r\n\r\n            if (option.length >= term.length &&\r\n                optionLower.substr(0, term.length) === termLower)\r\n                return returnFullMatch ? option : true;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Regex escape\r\n * @param {String} str\r\n * @returns {XML|void|string}\r\n */\r\nconst escapeRegExp = function (str) {\r\n    return str.replace(/[-[\\]/{}()*+?.\\\\$|]/g, '\\\\$&');\r\n};\r\n/**\r\n * Search for closest element to a specified point\r\n * @param {HTMLElement[]} elements\r\n * @param {{left: Number, top: Number }} offset\r\n * @returns {HTMLElement|null}\r\n */\r\nconst closestToOffset = function (elements, offset) {\r\n    const x = offset.left,\r\n        y = offset.top;\r\n    let bestMatch = null,\r\n        minDistance = null;\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n        const el = elements[i], $el = $(el);\r\n        const elOffset = $el.offset();\r\n\r\n        elOffset.right = elOffset.left + $el.outerWidth();\r\n        elOffset.bottom = elOffset.top + $el.outerHeight();\r\n\r\n        if (\r\n            (x >= elOffset.left) && (x <= elOffset.right) &&\r\n            (y >= elOffset.top) && (y <= elOffset.bottom)\r\n        ) {\r\n            return el;\r\n        }\r\n\r\n        const offsets = [\r\n            [elOffset.left, elOffset.top],\r\n            [elOffset.right, elOffset.top],\r\n            [elOffset.left, elOffset.bottom],\r\n            [elOffset.right, elOffset.bottom],\r\n        ];\r\n\r\n        for (let o = 0; o < 4; o++) {\r\n            const offset = offsets[o];\r\n            const dx = offset[0] - x;\r\n            const dy = offset[1] - y;\r\n            const distance = Math.sqrt((dx * dx) + (dy * dy));\r\n\r\n            if (minDistance == null || distance < minDistance) {\r\n                minDistance = distance;\r\n                bestMatch = el;\r\n            }\r\n        }\r\n    }\r\n\r\n    return bestMatch;\r\n};\r\n\r\nconst callFunctor = function (functor, bind, _arg1) {\r\n    return (typeof functor === 'function') ?\r\n        functor.apply(bind, Array.prototype.slice.call(arguments, 2)) :\r\n        functor;\r\n};\r\n\r\nconst inputBackbufferCssProps = [\r\n    'font-family',\r\n    'font-size',\r\n    'font-weight',\r\n    'font-size',\r\n    'letter-spacing',\r\n    'text-transform',\r\n    'word-spacing',\r\n    'text-indent',\r\n    'box-sizing',\r\n    'padding-left',\r\n    'padding-right',\r\n];\r\n\r\nconst hasComputedStyle = document.defaultView && document.defaultView.getComputedStyle;\r\n\r\n/**\r\n * Gets the precise content width for an element, with fractions\r\n * @param {Element} el\r\n * @returns {Number}\r\n */\r\nconst getPreciseContentWidth = function (el) {\r\n\r\n    const style = hasComputedStyle ? document.defaultView.getComputedStyle(el) : el.currentStyle;\r\n    let width = parseFloat(style['width']) || 0;\r\n\r\n    if (style['boxSizing'] === 'border-box') {\r\n        width -= parseFloat(style['paddingLeft']) || 0;\r\n        width -= parseFloat(style['paddingRight']) || 0;\r\n        width -= parseFloat(style['borderLeftWidth']) || 0;\r\n        width -= parseFloat(style['borderRightWidth']) || 0;\r\n\r\n        if (width < 0) {\r\n            width = 0;\r\n        }\r\n    }\r\n\r\n    return width;\r\n};\r\n\r\nconst FOCUSABLES = [\r\n    'a[href]',\r\n    'area[href]',\r\n    'input:not([disabled])',\r\n    'select:not([disabled])',\r\n    'textarea:not([disabled])',\r\n    'button:not([disabled])',\r\n    'iframe',\r\n    'object',\r\n    'embed',\r\n    '*[tabindex]',\r\n    '*[contenteditable]',\r\n];\r\n\r\nconst FOCUSABLE_SELECTOR = FOCUSABLES.join(',');\r\nconst TABBABLE_SELECTOR = FOCUSABLES.map(x => x + ':not([tabindex=-1])').join(',');\r\n\r\nconst KEY_ENTER = 13;\r\nconst KEY_ARROW_UP = 38;\r\nconst KEY_ARROW_DOWN = 40;\r\nconst KEY_ARROW_LEFT = 37;\r\nconst KEY_ARROW_RIGHT = 39;\r\n\r\n/** @class MaskedInput */\r\nclass MaskedInput {\r\n    /**\r\n     * @param {MaskedInput.Options?} options\r\n     * @returns {MaskedInput}\r\n     */\r\n    constructor(options) {\r\n        /** @private */\r\n        const o = this.o = $.extend({}, MaskedInput.defaults, options);\r\n\r\n        let patterns = {};\r\n        MaskedInput.patternAddons.forEach(addon => {\r\n            patterns = $.extend(patterns, addon);\r\n        });\r\n        patterns = $.extend(patterns, o.patterns);\r\n        o.patterns = patterns;\r\n\r\n        /** This is for encapsulating private data */\r\n        const p = this.p = {};\r\n\r\n        p.enabled = true;\r\n        p.inputs = [];\r\n\r\n        /** @public */\r\n        const $el = this.$el = $('<div>').addClass(o.className || 'masked-input');\r\n\r\n        /** @public */\r\n        this.el = this.$el[0];\r\n\r\n        // Set control data\r\n        $el\r\n            .data('control', this)\r\n            .data('maskedinput', this);\r\n\r\n        // Parse format\r\n        p.parsed = this._parseFormat(o.format);\r\n\r\n        // Create backbuffer for input\r\n        p.$inputBackBuffer = $('<span aria-hidden=\"true\" style=\"position:absolute;z-index:-1;left:0;top:-9999px;white-space:pre;\"/>');\r\n\r\n        // Hook up click event\r\n        $el.on('click', event => {\r\n            if (event.target !== event.currentTarget &&\r\n                $(event.target).is(FOCUSABLE_SELECTOR)) return;\r\n\r\n            const offset = $(event.currentTarget).offset();\r\n            offset.left += event.offsetX;\r\n            offset.top += event.offsetY;\r\n\r\n            const el = closestToOffset($el.children(FOCUSABLE_SELECTOR), offset);\r\n\r\n            if (el) {\r\n                el.focus();\r\n            }\r\n        });\r\n\r\n        this.render();\r\n\r\n        setTimeout(() => {\r\n            if (this.el && this.el.parentNode) {\r\n                this.resize();\r\n            }\r\n        }, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     * @param format\r\n     * @returns {MaskedInput~Part[]}\r\n     */\r\n    _parseFormat(format) {\r\n        const o = this.o;\r\n\r\n        let parsedFormat = [];\r\n\r\n        // Loop through basic format matches\r\n\r\n        execRegexWithLeftovers(FORMAT_REGEX, format, (function onMatch(match) {\r\n\r\n            const numericMatch = match[1] || match[2];\r\n            const textMatch = match[3];\r\n            const quotedMatch = match[4];\r\n\r\n            let i, part;\r\n\r\n            if (numericMatch) {\r\n                part = { type: PartType.NUMBER };\r\n                i = numericMatch.indexOf(':');\r\n\r\n                if (i > -1) {\r\n                    part.length = i;\r\n                    part.name = numericMatch.substr(i + 1);\r\n                } else {\r\n                    part.length = numericMatch.length;\r\n                }\r\n\r\n                if (match[2]) { // max length\r\n                    part.maxLength = part.length;\r\n                    part.length = 0;\r\n                }\r\n\r\n                parsedFormat.push(part);\r\n            } else if (textMatch) {\r\n                part = { type: PartType.TEXT };\r\n                if (textMatch[0] === '*') {\r\n                    part.length = 0;\r\n                } else {\r\n                    i = textMatch.indexOf(':');\r\n\r\n                    if (i > -1) {\r\n                        part.length = i;\r\n                        part.name = textMatch.substr(i + 1);\r\n                    } else {\r\n                        part.length = textMatch.length;\r\n                    }\r\n                }\r\n                parsedFormat.push(part);\r\n            } else if (quotedMatch) {\r\n                const labelText = quotedMatch.substr(1, quotedMatch.length - 2);\r\n                part = {\r\n                    type: PartType.LABEL,\r\n                    text: labelText,\r\n                    length: labelText.length,\r\n                };\r\n                parsedFormat.push(part);\r\n            }\r\n\r\n        }).bind(this), (function onLeftover(leftover) {\r\n\r\n            const leftoverParts = [];\r\n\r\n            const part = {\r\n                type: PartType.LABEL,\r\n                text: leftover,\r\n                length: leftover.length,\r\n            };\r\n            leftoverParts.push(part);\r\n\r\n            Object.keys(o.patterns).forEach(key => {\r\n                const patterns = o.patterns[key];\r\n\r\n                const regex = new RegExp(\r\n                    patterns.pattern instanceof RegExp ?\r\n                        patterns.pattern.source :\r\n                        patterns.pattern,\r\n                    patterns.pattern instanceof RegExp ?\r\n                        (patterns.pattern.flags + (patterns.pattern.flags.indexOf('g') > -1 ? '' : 'g')) :\r\n                        'g',\r\n                );\r\n\r\n                for (let fpos = 0; fpos < leftoverParts.length; fpos++) {\r\n                    const fpart = leftoverParts[fpos];\r\n                    if (fpart.type !== PartType.LABEL) continue;\r\n\r\n                    const newParts = [];\r\n\r\n                    execRegexWithLeftovers(regex, fpart.text, (function onMatch(match) {\r\n\r\n                        let validator;\r\n                        if (patterns.validator instanceof RegExp || typeof patterns.validator === 'function') {\r\n                            validator = patterns.validator;\r\n                        } else if (typeof patterns.validator === 'string') {\r\n                            try {\r\n                                validator = new RegExp(patterns.validator);\r\n                            } catch (ignored) { /* nothing to do */ }\r\n                        }\r\n\r\n                        // Translate the part\r\n                        const part = {\r\n                            type: callFunctor(patterns.type, this, match[0]),\r\n                            name: callFunctor(patterns.name, this, match[0]),\r\n                            ariaLabel: callFunctor(patterns.ariaLabel, this, match[0]),\r\n                            text: callFunctor(patterns.text, this, match[0]),\r\n                            placeholder: callFunctor(patterns.placeholder, this, match[0]),\r\n                            length: callFunctor(patterns.length, this, match[0]) || 0,\r\n                            maxLength: callFunctor(patterns.maxLength, this, match[0]) || 0,\r\n                            numericMin: callFunctor(patterns.numericMin, this, match[0]),\r\n                            numericMax: callFunctor(patterns.numericMax, this, match[0]),\r\n                            wholeNumber: callFunctor(patterns.wholeNumber, this, match[0]),\r\n                            validator: validator,\r\n                            options: callFunctor(patterns.options, this, match[0]),\r\n                            postProcess: patterns.postProcess,\r\n                            padding: callFunctor(patterns.padding, this, match[0]),\r\n                            required: callFunctor(patterns.required, this, match[0]),\r\n                            defaultValue: callFunctor(patterns.defaultValue, this, match[0]),\r\n                            forcePlaceholderWidth: callFunctor(patterns.forcePlaceholderWidth, this, match[0]),\r\n                        };\r\n                        //noinspection JSReferencingMutableVariableFromClosure\r\n                        newParts.push(part);\r\n\r\n                    }).bind(this), (function onLeftover(leftover) {\r\n                        const part = {\r\n                            type: PartType.LABEL,\r\n                            text: leftover,\r\n                            length: leftover.length,\r\n                        };\r\n                        //noinspection JSReferencingMutableVariableFromClosure\r\n                        newParts.push(part);\r\n                    }).bind(this));\r\n\r\n                    // Replace old label with new parts\r\n                    Array.prototype.splice.apply(leftoverParts, [fpos, 1].concat(newParts));\r\n\r\n                    // Move leftoverParts position as necessary\r\n                    fpos += newParts.length - 1;\r\n                }\r\n\r\n            });\r\n\r\n            parsedFormat = parsedFormat.concat(leftoverParts);\r\n        }).bind(this));\r\n\r\n        return parsedFormat;\r\n    }\r\n\r\n    render() {\r\n        const p = this.p;\r\n\r\n        this.$el.empty();\r\n\r\n        const inputs = [];\r\n\r\n        p.parsed.forEach(part => {\r\n            if (part.type === PartType.LABEL) {\r\n                const $el = this._renderText(part).appendTo(this.$el);\r\n                part.$el = $el;\r\n                part.el = $el[0];\r\n                return;\r\n            }\r\n\r\n            const $input = this._renderInput(part).appendTo(this.$el);\r\n\r\n            part.$el = $input;\r\n            part.el = $input[0];\r\n\r\n            inputs.push($input);\r\n\r\n            if (part.name && parseInt(part.name, 10).toString() !== part.name) {\r\n                inputs[part.name] = (inputs[part.name] || []).concat(part.el);\r\n            }\r\n        });\r\n\r\n        p.inputs = inputs;\r\n\r\n        this.resize();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {MaskedInput~Part} part\r\n     * @param {HTMLInputElement?} input\r\n     * @returns {jQuery}\r\n     */\r\n    _renderInput(part, input) {\r\n        const p = this.p;\r\n\r\n        const isNewInput = !input;\r\n\r\n        let $input;\r\n\r\n        if (isNewInput) {\r\n            $input = $('<input>').data('part', part).prop('disabled', !p.enabled);\r\n            input = $input[0];\r\n        } else {\r\n            $input = $(input);\r\n        }\r\n\r\n        if (part.name) {\r\n            input.setAttribute('data-name', part.name);\r\n        } else {\r\n            input.removeAttribute('data-name');\r\n        }\r\n\r\n        if (part.ariaLabel) {\r\n            input.setAttribute('aria-label', part.ariaLabel);\r\n        } else {\r\n            input.removeAttribute('aria-label');\r\n        }\r\n\r\n        if (part.length || part.maxLength || typeof part.placeholder === 'string') {\r\n            //noinspection UnnecessaryLocalVariableJS\r\n            const placeholder = typeof part.placeholder === 'string'\r\n                ? part.placeholder\r\n                : (part.placeholder === undefined || part.placeholder) ? repeatChar('_', part.length || part.maxLength) : '';\r\n            input.placeholder = placeholder;\r\n        }\r\n\r\n        if (isNewInput) {\r\n            $input\r\n                .on('input.maskedinput', event => {\r\n                    this._handleInput(event, input, part);\r\n                    this._syncInputSizeForPart(part);\r\n                })\r\n                .on('keydown.maskedinput', event => {\r\n                    this._handleKeydown(event, input, part);\r\n                })\r\n                .on('keypress.maskedinput', event => {\r\n                    this._handleKeypress(event, input, part);\r\n                });\r\n        }\r\n\r\n        return $input;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {MaskedInput~Part} part\r\n     * @returns {jQuery}\r\n     */\r\n    _renderText(part) {\r\n        return $('<span style=\"white-space: pre\">').text(part.text);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {jQuery|Element|String} input\r\n     * @param {Boolean=true} alwaysConsiderPlaceholder\r\n     * @param {String=A} fallbackText\r\n     * @returns {MaskedInput}\r\n     */\r\n    _syncInputSize(input, alwaysConsiderPlaceholder, fallbackText) {\r\n        const p = this.p;\r\n\r\n        if (alwaysConsiderPlaceholder === undefined) {\r\n            alwaysConsiderPlaceholder = true;\r\n        }\r\n\r\n        if (fallbackText === undefined) {\r\n            fallbackText = 'A';\r\n        }\r\n\r\n        const $input = $(input), $backBuffer = p.$inputBackBuffer;\r\n\r\n        /** @type {HTMLInputElement} */\r\n        const inputEl = $input[0];\r\n\r\n        fallbackText = fallbackText == null ? '' : (fallbackText + '');\r\n        const value = inputEl.value || inputEl.placeholder || fallbackText;\r\n\r\n        // Introduce backbuffer to DOM\r\n        $backBuffer\r\n            .css($input.css(inputBackbufferCssProps))\r\n            .text(value)\r\n            .appendTo(this.$el);\r\n\r\n        // Measure these\r\n        let backBufferWidth = getPreciseContentWidth($backBuffer[0]) + 1 /* caret width */;\r\n        const currentWidth = getPreciseContentWidth(inputEl);\r\n\r\n        if (alwaysConsiderPlaceholder &&\r\n            inputEl.value &&\r\n            inputEl.placeholder &&\r\n            inputEl.placeholder !== inputEl.value) {\r\n            $backBuffer.text(inputEl.placeholder);\r\n            backBufferWidth = Math.max(\r\n                backBufferWidth,\r\n                getPreciseContentWidth($backBuffer[0]) + 1, /* caret width */\r\n            );\r\n        }\r\n\r\n        // Compare\r\n        if (backBufferWidth !== currentWidth) {\r\n            // Update if needed\r\n            $input.css('width', backBufferWidth + 'px');\r\n        }\r\n\r\n        if ($input[0].scrollWidth > backBufferWidth) {\r\n            $input.css('width', inputEl.scrollWidth);\r\n        }\r\n\r\n        // Remove backbuffer from DOM\r\n        $backBuffer.remove();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {MaskedInput~Part} part\r\n     * @returns {MaskedInput}\r\n     */\r\n    _syncInputSizeForPart(part) {\r\n        if (!part.el || part.type === PartType.LABEL) return this;\r\n        return this._syncInputSize(\r\n            part.el,\r\n            part.forcePlaceholderWidth === undefined ? true : !!part.forcePlaceholderWidth,\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {jQuery.Event} event\r\n     * @param {HTMLInputElement} input\r\n     * @param {MaskedInput~Part} part\r\n     * @returns {MaskedInput}\r\n     */\r\n    _handleInput(event, input, part) {\r\n        const content = input.value;\r\n        let validatedContent;\r\n\r\n        // Update input if acceptable\r\n        validatedContent = this._validateContent(content, part);\r\n\r\n        if (validatedContent === false) {\r\n            event.preventDefault();\r\n\r\n            // Fire change event\r\n            this.$el.trigger('change');\r\n\r\n            return this;\r\n        }\r\n\r\n        if (typeof validatedContent === 'string' &&\r\n            content !== validatedContent) {\r\n            input.value = validatedContent;\r\n        }\r\n\r\n        this._syncInputSizeForPart(part);\r\n\r\n        if (this._shouldMoveToNextFieldAfterInput(getSelectionRange(input), input.value, part)) {\r\n            $(input).nextAll(TABBABLE_SELECTOR).first().focus();\r\n        }\r\n\r\n        // Fire change event\r\n        this.$el.trigger('change');\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {jQuery.Event} event\r\n     * @param {HTMLInputElement} input\r\n     * @param {MaskedInput~Part} part\r\n     * @returns {MaskedInput}\r\n     */\r\n    _handleKeydown(event, input, part) {\r\n        if (input.readOnly) return this;\r\n\r\n        const keycode = event.which;\r\n        let triggerChange = false;\r\n\r\n        const contentBefore = input.value;\r\n        let validatedContent;\r\n\r\n        // Handle UP/DOWN arrows for next/previous value\r\n\r\n        if (keycode === KEY_ARROW_UP || keycode === KEY_ARROW_DOWN) {\r\n\r\n            let nextValue, tryToUpdate = false;\r\n\r\n            const minLen = part.maxLength ?\r\n                Math.max(1, Math.min(part.length || 0, part.maxLength || 1)) :\r\n                (part.length || 1);\r\n            const maxLen = Math.max(part.length || 0, part.maxLength || 0);\r\n\r\n            if (part.type === PartType.TEXT && part.options) {\r\n\r\n                const fullMatch = findMatchInArray(part.options, contentBefore, true, true, false);\r\n                let index = part.options.indexOf(fullMatch);\r\n\r\n                if (index === -1) {\r\n                    if (keycode === KEY_ARROW_UP) {\r\n                        index = 0;\r\n                    } else {\r\n                        index = part.options.length - 1;\r\n                    }\r\n                } else {\r\n                    index += keycode === KEY_ARROW_DOWN ? 1 : -1;\r\n                }\r\n\r\n                if (index === part.options.length) {\r\n                    index = 0;\r\n                } else if (index === -1) {\r\n                    index = part.options.length - 1;\r\n                }\r\n\r\n                nextValue = part.options[index];\r\n\r\n                tryToUpdate = true;\r\n\r\n            } else if (part.type === PartType.NUMBER) {\r\n\r\n                if (!contentBefore &&\r\n                    keycode === KEY_ARROW_DOWN &&\r\n                    part.wholeNumber &&\r\n                    (typeof part.numericMax === 'number' || maxLen > 0) &&\r\n                    typeof part.numericMin === 'number' &&\r\n                    part.numericMin >= 0) {\r\n\r\n                    // Start with largest number if going down from nothing\r\n                    nextValue = typeof part.numericMax === 'number' ?\r\n                        part.numericMax :\r\n                        parseInt(repeatChar('9', maxLen), 10);\r\n\r\n                } else if (!contentBefore &&\r\n                    keycode === KEY_ARROW_UP &&\r\n                    part.wholeNumber &&\r\n                    typeof part.numericMin === 'number') {\r\n\r\n                    // Start with minimum number\r\n                    nextValue = part.numericMin === 0 ? 1 : part.numericMin;\r\n\r\n                } else {\r\n                    /// Up or down\r\n                    nextValue = parseFloat(contentBefore) || 0;\r\n                    nextValue += keycode === KEY_ARROW_UP ? 1 : -1;\r\n                }\r\n\r\n                // Limit to whole numbers\r\n                if (part.wholeNumber) {\r\n                    nextValue = Math.round(nextValue);\r\n                }\r\n\r\n                // Limit to min/max\r\n                if (typeof part.numericMin === 'number' || typeof part.numericMax === 'number') {\r\n                    nextValue = Math.max(\r\n                        Math.min(\r\n                            nextValue,\r\n                            typeof part.numericMax === 'number' ? part.numericMax : Infinity,\r\n                        ),\r\n                        typeof part.numericMin === 'number' ? part.numericMin : -Infinity,\r\n                    );\r\n                }\r\n\r\n                nextValue = nextValue + '';\r\n\r\n                // Left-pad with zeroes when we figure out that we want that\r\n                if (typeof part.numericMin === 'number' &&\r\n                    part.numericMin >= 0) {\r\n                    nextValue = repeatChar('0', minLen - nextValue.length) + nextValue;\r\n                }\r\n\r\n                tryToUpdate = true;\r\n            }\r\n\r\n            // Update input if acceptable\r\n            if (tryToUpdate && nextValue !== contentBefore) {\r\n                validatedContent = this._validateContent(nextValue, part);\r\n                if (validatedContent === true) {\r\n                    validatedContent = nextValue;\r\n                }\r\n                if (validatedContent !== false) {\r\n                    input.value = validatedContent;\r\n                    this._syncInputSizeForPart(part);\r\n                    event.preventDefault();\r\n\r\n                    triggerChange = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (triggerChange) {\r\n            // Fire change event\r\n            this.$el.trigger('change');\r\n        }\r\n\r\n        // Handle LEFT/RIGHT arrows, basically when we are at the end/beginning of an input\r\n        if (keycode === KEY_ARROW_LEFT || keycode === KEY_ARROW_RIGHT) {\r\n            const isRtl = $(input).css('direction') === 'rtl';\r\n\r\n            if ((!isRtl && keycode === KEY_ARROW_LEFT) || (isRtl && keycode === KEY_ARROW_RIGHT)) {\r\n                if (getSelectionRange(input).begin === 0) {\r\n                    $(input).prevAll(TABBABLE_SELECTOR).first().focus();\r\n                }\r\n            } else {\r\n                if (getSelectionRange(input).begin === input.value.length) {\r\n                    $(input).nextAll(TABBABLE_SELECTOR).first().focus();\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {jQuery.Event} event\r\n     * @param {HTMLInputElement} input\r\n     * @param {MaskedInput~Part} part\r\n     * @returns {MaskedInput}\r\n     */\r\n    _handleKeypress(event, input, part) {\r\n        if (input.readOnly) return this;\r\n\r\n        const keycode = event.which;\r\n        const pos = getSelectionRange(input);\r\n\r\n        if (event.ctrlKey || event.altKey || event.metaKey ||\r\n            !keycode ||\r\n            keycode < 32 || keycode === KEY_ENTER) return this; // Not a character, perform default\r\n\r\n        event.preventDefault();\r\n\r\n        let triggerChange = false;\r\n        let moveToNextField = false;\r\n\r\n        const pressedChar = event.key || String.fromCharCode(keycode);\r\n\r\n        const contentBefore = input.value;\r\n        let contentAfter = contentBefore.substr(0, pos.begin) +\r\n            pressedChar +\r\n            contentBefore.substr(pos.end);\r\n\r\n        const validatedContent = this._validateContent(contentAfter, part);\r\n        if (validatedContent === false) return this; // Not validated, ignore keypress\r\n\r\n        if (typeof validatedContent === 'string') {\r\n            contentAfter = validatedContent;\r\n        }\r\n\r\n        if (contentAfter !== contentBefore || contentAfter.substr(pos.begin, 1) === pressedChar) {\r\n\r\n            const newPos = {};\r\n\r\n            // Set caret at new position\r\n\r\n            if (pos.end - pos.begin > 0 && pos.direction === 'backward') {\r\n                newPos.begin = newPos.end = pos.begin;\r\n            } else {\r\n                newPos.begin = newPos.end = pos.begin + 1;\r\n            }\r\n\r\n            // Show rest of only choice found\r\n            if (part.type === PartType.TEXT && part.options) {\r\n\r\n                const fullMatch = findMatchInArray(part.options, contentAfter, false, true, false);\r\n                if (fullMatch !== undefined && fullMatch.length !== contentAfter.length) {\r\n                    // Choose a selection range for the rest of the match\r\n                    newPos.begin = contentAfter.length;\r\n                    newPos.end = fullMatch.length;\r\n\r\n                    // Set new input to full match\r\n                    contentAfter = fullMatch;\r\n                }\r\n\r\n            }\r\n\r\n            // Update value\r\n            input.value = contentAfter;\r\n\r\n            // Update selection / caret\r\n            //noinspection JSCheckFunctionSignatures\r\n            setSelectionRange(input, newPos);\r\n\r\n            // See if we need to move on to next field\r\n            moveToNextField = this._shouldMoveToNextFieldAfterInput(newPos, contentAfter, part);\r\n\r\n            triggerChange = true;\r\n\r\n        } else {\r\n\r\n            // These are usually used as separators\r\n            if (pressedChar === '/' ||\r\n                pressedChar === ':' ||\r\n                pressedChar === '-' ||\r\n                pressedChar === '(' ||\r\n                pressedChar === ')' ||\r\n                pressedChar === '.') {\r\n                moveToNextField = true;\r\n            }\r\n        }\r\n\r\n        this._syncInputSizeForPart(part);\r\n\r\n        if (triggerChange) {\r\n            // Fire change event\r\n            this.$el.trigger('change');\r\n        }\r\n\r\n        if (moveToNextField) {\r\n            $(input).nextAll(TABBABLE_SELECTOR).first().focus();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Determines if we need to skip to next field after input change\r\n     * @private\r\n     * @param {{begin: Number, end: Number}} newPos\r\n     * @param {String} newContent\r\n     * @param {MaskedInput~Part} part\r\n     */\r\n    _shouldMoveToNextFieldAfterInput(newPos, newContent, part) {\r\n        if (newPos.begin === newContent.length) {\r\n            if (part.type === PartType.TEXT) {\r\n                return findMatchInArray(part.options, newContent, false, true, false) === newContent;\r\n            } else {\r\n                return (part.length || part.maxLength || 0) > 0 &&\r\n                    newContent.length === (part.length || part.maxLength);\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {String} content\r\n     * @param {MaskedInput~Part} part\r\n     * @returns {String|Boolean}\r\n     */\r\n    _validateContent(content, part) {\r\n\r\n        // Priority given to validator\r\n        if (part.validator) {\r\n            if (part.validator instanceof RegExp) {\r\n                return part.validator.test(content);\r\n            }\r\n\r\n            let ret = part.validator.call(this, content, part);\r\n            if (ret == null) {\r\n                ret = false;\r\n            }\r\n            return ret;\r\n        }\r\n\r\n        const maxLen = Math.max(part.length || 0, part.maxLength || 0);\r\n\r\n        // Test numeric\r\n        if (part.type === PartType.NUMBER) {\r\n\r\n            if (part.wholeNumber) {\r\n                content = content.replace(/[^-0-9]/g, ''); // Zeroes and \"-\" only\r\n            } else {\r\n                content = content.replace(/[^-0-9.]/g, ''); // Zeroes, \"-\" and \".\" only\r\n            }\r\n\r\n            content = content\r\n                .replace(/^.+-/g, '-') // Dash can only be at the beginning\r\n                .replace(/\\..*\\./g, '.'); // Only one decimal point\r\n\r\n            if (maxLen > 0 && content.length > maxLen) {\r\n                content = content.substr(0, maxLen);\r\n            }\r\n\r\n            // Limit to min/max\r\n            // It's important to do this AFTER trimming the value,\r\n            // To allow inserting character in the middle.\r\n            if (typeof part.numericMin === 'number' || typeof part.numericMax === 'number') {\r\n                let parsedValue = parseFloat(content);\r\n                if (!isNaN(parsedValue)) {\r\n                    parsedValue = Math.max(\r\n                        Math.min(\r\n                            parsedValue,\r\n                            typeof part.numericMax === 'number' ? part.numericMax : Infinity,\r\n                        ),\r\n                        typeof part.numericMin === 'number' ? part.numericMin : -Infinity,\r\n                    );\r\n\r\n                    if (parsedValue !== parseFloat(content)) {\r\n                        content = parsedValue + '';\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!content) {\r\n                return false;\r\n            }\r\n\r\n            return content;\r\n        }\r\n\r\n        // Test textual\r\n        if (part.type === PartType.TEXT) {\r\n            if (part.options) {\r\n                const match = findMatchInArray(part.options, content, true, false, false);\r\n                if (match !== undefined) {\r\n                    return match;\r\n                }\r\n                return false;\r\n            }\r\n\r\n            return maxLen === 0 || content.length <= maxLen;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {MaskedInput}\r\n     */\r\n    resize() {\r\n        const p = this.p;\r\n\r\n        (p.parsed || []).forEach(part => this._syncInputSizeForPart(part));\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Retrieve a field element by index or label\r\n     * @public\r\n     * @param {Number|String} index\r\n     * @returns {HTMLInputElement}\r\n     */\r\n    field(index) {\r\n        const p = this.p;\r\n\r\n        const input = p.inputs[index];\r\n\r\n        if (!input) return undefined;\r\n\r\n        return $.isArray(input) ? input.slice(0) : input;\r\n    }\r\n\r\n    /**\r\n     * Creates a pattern for parsing an incoming value\r\n     * @private\r\n     * @returns {string}\r\n     */\r\n    _valuePattern() {\r\n        const p = this.p;\r\n\r\n        let pattern = '';\r\n\r\n        p.parsed.forEach(part => {\r\n            let group = '';\r\n\r\n            const minLen = part.maxLength ?\r\n                Math.max(1, Math.min(part.length || 0, part.maxLength || 1)) :\r\n                (part.length || 1);\r\n            const maxLen = Math.max(part.length || 0, part.maxLength || 0);\r\n\r\n            if (part.type === PartType.TEXT) {\r\n                if (part.options) {\r\n                    for (let i = 0; i < part.options.length; i++) {\r\n                        if (i > 0) {\r\n                            group += '|';\r\n                        }\r\n                        group += escapeRegExp(part.options[i]);\r\n                    }\r\n                } else {\r\n                    if (maxLen) {\r\n                        group += '.{0,' + maxLen + '}';\r\n                    } else {\r\n                        group += '.*?';\r\n                    }\r\n                }\r\n            } else if (part.type === PartType.NUMBER) {\r\n                if (part.wholeNumber) {\r\n                    if (part.length > 0) {\r\n                        group += '[-+]' + '[0-9]{' + (minLen - 1) + ',' + (maxLen - 1) + '}';\r\n                        group += '|[0-9]{' + minLen + ',' + maxLen + '}';\r\n                    } else {\r\n                        group += '[-+]?[0-9]+';\r\n                    }\r\n                } else {\r\n                    if (maxLen) {\r\n                        group += '[-+]' + '[0-9.]{' + (minLen - 1) + ',' + (maxLen - 1) + '}';\r\n                        group += '|[0-9.]{' + minLen + ',' + maxLen + '}';\r\n                    } else {\r\n                        group += '[-+]?(?:[0-9]+(?:\\\\.[0-9]+)?|\\\\.[0-9]+)';\r\n                    }\r\n                }\r\n            } else /* if (part.type === PartType.LABEL) */ {\r\n                group += escapeRegExp(part.text == null ? '' : (part.text + ''));\r\n            }\r\n\r\n            pattern += '(' + group + ')';\r\n\r\n            if (part.required !== undefined && !part.required) {\r\n                pattern += '?';\r\n            }\r\n        });\r\n\r\n        return '^' + pattern + '$';\r\n    }\r\n\r\n    /**\r\n     * Retrieve or set an input element's value\r\n     * @private\r\n     * @param {HTMLInputElement|jQuery|String} input\r\n     * @param {String?} newValue\r\n     * @returns {String|MaskedInput|undefined}\r\n     */\r\n    _fieldValue(input, newValue) {\r\n        const $input = $(input);\r\n        if (!$input.length) return undefined;\r\n        input = $input[0];\r\n\r\n        const part = /**MaskedInput~Part=*/ $input.data('part');\r\n        let validatedValue;\r\n\r\n        if (newValue === undefined) {\r\n            let value = input.value;\r\n\r\n            // Predefined choices?\r\n            if (part.type === PartType.TEXT && part.options) {\r\n                return findMatchInArray(part.options, value, true, true, false);\r\n            }\r\n\r\n            // Enforce length\r\n            const maxLen = Math.max(part.length || 0, part.maxLength || 0);\r\n            if (maxLen > 0 && value.length > maxLen) {\r\n                value = value.substr(0, maxLen);\r\n            }\r\n\r\n            // Validate value\r\n            validatedValue = this._validateContent(value, part);\r\n            if (validatedValue === false) return undefined;\r\n\r\n            if (validatedValue !== true) { // A string, probably\r\n                value = validatedValue + '';\r\n            }\r\n\r\n            return value;\r\n        } else {\r\n            newValue = newValue == null ? '' : (newValue + '');\r\n            validatedValue = this._validateContent(newValue, part);\r\n            if (validatedValue === false) {\r\n                validatedValue = '';\r\n            } else if (validatedValue === true) {\r\n                validatedValue = newValue;\r\n            }\r\n\r\n            input.value = validatedValue;\r\n\r\n            this._syncInputSizeForPart(part);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve an input element's value by index or label\r\n     * @public\r\n     * @param {Number|String} index\r\n     * @param {String?} newValue\r\n     * @returns {String|MaskedInput|undefined}\r\n     */\r\n    fieldValue(index, newValue) {\r\n        const p = this.p;\r\n\r\n        const input = p.inputs[index];\r\n\r\n        if (!input) return undefined;\r\n\r\n        if (newValue === undefined) {\r\n            return this._fieldValue(input);\r\n        } else {\r\n            this._fieldValue(input, newValue);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets or sets an option by name\r\n     * @param {String} name\r\n     * @param {*?} newValue\r\n     * @returns {MaskedInput}\r\n     */\r\n    option(name, newValue) {\r\n        const o = this.o;\r\n\r\n        if (arguments.length === 2) {\r\n            if (name === 'patterns') {\r\n                o[name] = {};\r\n\r\n                MaskedInput.patternAddons.forEach(addon => {\r\n                    o[name] = $.extend(o[name], addon);\r\n                });\r\n\r\n                o[name] = $.extend(o[name], newValue);\r\n            } else {\r\n                o[name] = newValue;\r\n            }\r\n        } else {\r\n            return o[name];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets or sets a part's option by option name\r\n     * @private\r\n     * @param {MaskedInput~Part} part\r\n     * @param {String|Object<String, *>} name\r\n     * @param {*?} value\r\n     * @returns {MaskedInput|*}\r\n     */\r\n    _fieldOption(part, name, value) {\r\n        const p = this.p;\r\n\r\n        if (!part) {\r\n            return arguments.length === 3 ? this : undefined;\r\n        }\r\n\r\n        if (arguments.length === 3 || typeof (name) === 'object') {\r\n\r\n            if (typeof name === 'object') {\r\n                // Set the options object for part\r\n                Object.keys(/**@type {Object<String, *>}*/name).forEach(key => {\r\n                    this._fieldOption(part, key, name[key]);\r\n                });\r\n\r\n                return this;\r\n            }\r\n\r\n            if (name === 'name' && part.name !== value) {\r\n\r\n                // Remove by the old name\r\n                if (parseInt(part.name, 10).toString() !== part.name &&\r\n                    p.inputs[part.name]) {\r\n                    if (p.inputs[part.name] instanceof HTMLElement) {\r\n                        delete p.inputs[part.name];\r\n                    } else {\r\n                        p.inputs[part.name].splice(p.inputs[part.name].indexOf(part), 1);\r\n                        if (p.inputs[part.name].length === 1) {\r\n                            p.inputs[part.name] = p.inputs[part.name][0];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Assign the new name\r\n                if (value && parseInt(value, 10).toString() !== value) {\r\n                    if (p.inputs[value]) {\r\n                        if (p.inputs[value] instanceof HTMLElement) {\r\n                            p.inputs[value] = [p.inputs[value], part];\r\n                        } else {\r\n                            p.inputs[value] = part;\r\n                        }\r\n                    } else {\r\n                        p.inputs[value] = part;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (name !== 'el' && name !== '$el') {\r\n                // Do not allow overriding the internal element pointer by mistake\r\n                part[name] = value;\r\n            }\r\n\r\n            if (part.el && (\r\n                name === 'length' ||\r\n                name === 'name' ||\r\n                name === 'ariaLabel' ||\r\n                name === 'placeholder')) {\r\n                this._renderInput(part, part.el);\r\n            }\r\n\r\n        } else {\r\n\r\n            if (Array.isArray(name)) {\r\n                // Return value mapping as an object\r\n                const options = {};\r\n\r\n                (/**@type String[]*/name).forEach(key => {\r\n                    options[key] = part[key];\r\n                });\r\n\r\n                return options;\r\n            } else {\r\n                // Return value\r\n                return part[name];\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets a part's option by part's index and option name\r\n     * @public\r\n     * @param {Number|String} index\r\n     * @param {String|Object} name\r\n     * @param {*?} value\r\n     * @returns {MaskedInput|*}\r\n     */\r\n    fieldOption(index, name, value) {\r\n        const that = this,\r\n            p = this.p;\r\n\r\n        const inputEls = p.inputs[index];\r\n        if (!inputEls) return this;\r\n\r\n        if (inputEls.length > 1) {\r\n            if (arguments.length === 3 || typeof (name) === 'object') {\r\n\r\n                // Set the option/options for all inputs\r\n                inputEls.forEach(el => {\r\n                    that._fieldOption($(el).data('part'), name, value);\r\n                });\r\n\r\n                delete p.valueRegex;\r\n\r\n                return this;\r\n            } else {\r\n\r\n                // Return array of option/options for all inputs\r\n                return inputEls.map(el => that._fieldOption($(el).data('part'), name));\r\n            }\r\n        } else {\r\n            if (arguments.length === 3) {\r\n\r\n                // Set the option/options for input\r\n                this._fieldOption($(inputEls).data('part'), name, value);\r\n\r\n                delete p.valueRegex;\r\n\r\n                return this;\r\n            } else {\r\n\r\n                // Return value/values\r\n                return this._fieldOption($(inputEls).data('part'), name);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get or set the full value\r\n     * @public\r\n     * @param {String?} newValue\r\n     * @returns {String|undefined|MaskedInput}\r\n     */\r\n    value(newValue) {\r\n        const p = this.p;\r\n\r\n        let pi, part, value;\r\n\r\n        if (newValue === undefined) {\r\n\r\n            let out = '';\r\n\r\n            for (pi = 0; pi < p.parsed.length; pi++) {\r\n                part = p.parsed[pi];\r\n\r\n                if (part.type === PartType.TEXT) {\r\n\r\n                    value = this._fieldValue(part.el);\r\n\r\n                    // Check that the value is OK\r\n                    if (part.postProcess) {\r\n                        value = part.postProcess.call(this, value, part) + '';\r\n                    }\r\n\r\n                    if (value === undefined) {\r\n                        if (part.required === undefined || part.required) {\r\n                            return undefined;\r\n                        }\r\n\r\n                        value = part.defaultValue || '';\r\n                    }\r\n\r\n                    out += value === undefined ? '' : value;\r\n\r\n                } else if (part.type === PartType.NUMBER) {\r\n\r\n                    value = this._fieldValue(part.el);\r\n\r\n                    // Check that the value is OK\r\n                    if (value === undefined) {\r\n                        if (part.required === undefined || part.required) {\r\n                            return undefined;\r\n                        }\r\n\r\n                        value = part.defaultValue || '';\r\n                    }\r\n\r\n                    // Post process\r\n                    if (part.postProcess) {\r\n                        value = part.postProcess.call(this, value, part);\r\n\r\n                        // Check again that the value is OK\r\n                        if (value === undefined) {\r\n                            if (part.required === undefined || part.required) {\r\n                                return undefined;\r\n                            }\r\n\r\n                            value = part.defaultValue || '';\r\n                        } else {\r\n                            value = value + '';\r\n                        }\r\n                    }\r\n\r\n                    const minLen = part.maxLength ?\r\n                        Math.max(0, Math.min(part.length || 0, part.maxLength || 0)) :\r\n                        (part.length || 0);\r\n                    const maxLen = Math.max(part.length || 0, part.maxLength || 0);\r\n\r\n                    // Try to pad with zeroes where possible\r\n                    if (part.padding || part.padding === undefined) {\r\n                        const padding = typeof part.padding === 'number' ? part.padding || minLen : minLen;\r\n\r\n                        if (padding > 0 && value.length < padding) {\r\n                            for (let i = 0; i < value.length; i++) {\r\n                                if (/[0-9.]/.test(value[i])) {\r\n                                    value = value.substr(0, i) +\r\n                                        repeatChar('0', padding - value.length) +\r\n                                        value.substr(i);\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (value.length < padding) {\r\n                                value = repeatChar('0', padding - value.length) + value;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    out += value === undefined ? '' : value;\r\n\r\n                } else { // PartType.LABEL\r\n                    // Probably a raw text between labels\r\n                    out += part.text;\r\n                }\r\n\r\n            }\r\n\r\n            return out;\r\n\r\n        } else {\r\n            if (!p.valueRegex) {\r\n                p.valueRegex = new RegExp(this._valuePattern(), 'i');\r\n            }\r\n\r\n            const matches = newValue.match(p.valueRegex) || [];\r\n            for (let i = 1, pi = 0; i < matches.length && pi < p.parsed.length; i++, pi++) {\r\n                part = p.parsed[pi];\r\n                value = matches[i] || '';\r\n\r\n                if (part.type !== PartType.LABEL) {\r\n\r\n                    this._fieldValue(part.el, value);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // Allow clearing the field\r\n            if (!matches.length && (newValue === '' || newValue === null)) {\r\n                for (pi = 0; pi < p.parsed.length; pi++) {\r\n                    part = p.parsed[pi];\r\n\r\n                    if (part.type !== PartType.LABEL) {\r\n                        this._fieldValue(part.el, '');\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {function(string?):(String|MaskedInput|undefined)}\r\n     */\r\n    get val() {\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * Set input enabled/disabled mode\r\n     * @param {Boolean} [enabled=true]\r\n     * @returns {MaskedInput} this\r\n     */\r\n    enable(enabled) {\r\n        const p = this.p;\r\n\r\n        enabled = !!enabled || enabled === undefined;\r\n\r\n        p.enabled = enabled;\r\n\r\n        this.$el.attr('disabled', enabled ? null : true);\r\n        this.$el.find('input').prop('disabled', !enabled);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set input enabled/disabled mode\r\n     * @param {Boolean} [disabled=true]\r\n     * @returns {MaskedInput} this\r\n     */\r\n    disable(disabled) {\r\n        disabled = !!disabled || disabled === undefined;\r\n        return this.enable(!disabled);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Boolean} <code>true</code> if enabled\r\n     */\r\n    get isEnabled() {\r\n        return this.p.enabled;\r\n    }\r\n\r\n    /**\r\n     * Set input enabled/disabled mode\r\n     * @param {Boolean} enabled\r\n     */\r\n    set isEnabled(enabled) {\r\n        this.enable(enabled);\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     * @returns {Boolean} <code>true</code> if disabled\r\n     */\r\n    get isDisabled() {\r\n        return !this.p.enabled;\r\n    }\r\n\r\n    /**\r\n     * Set input enabled/disabled mode\r\n     * @param {Boolean} disabled\r\n     */\r\n    set isDisabled(disabled) {\r\n        this.disable(disabled);\r\n    }\r\n}\r\n\r\nconst FORMAT_REGEX = new RegExp(\r\n    '(0+(?::[a-zA-Z0-9_]+)?)' + /* numeric value, fixed length, with possible :name_123 */\r\n    '|(#+(?::[a-zA-Z0-9_]+)?)' + /* numeric value, with possible :name_123 */\r\n    '|((?:@+|\\\\*)(?::[a-zA-Z0-9_]+)?)' + /* text value with maximum or variable length, with possible :name_123 */\r\n    '|(\"[^\"]*\"|\\'[^\\']*\\')' /* possible quoted text */\r\n    , 'g', // find all matches\r\n);\r\n\r\n/**\r\n * @public\r\n * @expose\r\n */\r\nMaskedInput.PartType = PartType;\r\n\r\n/**\r\n * Here we can add more pattern addons\r\n * @public\r\n * @expose\r\n */\r\nMaskedInput.patternAddons = [];\r\n\r\n/**\r\n * Default options for the control\r\n * @public\r\n * @expose\r\n * @type {MaskedInput.Options}\r\n */\r\nMaskedInput.defaults = defaults;\r\n\r\nexport default MaskedInput;\r\n","'use strict';\r\n\r\nimport MaskedInput from './jquery.maskedinput.core';\r\n\r\n/**\r\n * @name MaskedInput~Options\r\n * @property {MaskedInput~DateLocale} [dateLocale] - Date localization map\r\n */\r\n\r\n/**\r\n * @typedef {Object} MaskedInput~DateLocale\r\n * @property {String[]} [MMM]\r\n * @property {String[]} [MMMM]\r\n * @property {String[]} [t]\r\n * @property {String[]} [tt]\r\n * @property {String[]} [T]\r\n * @property {String[]} [TT]\r\n */\r\n\r\nconst repeatChar = function (char, length) {\r\n    let out = '';\r\n    for (let i = 0; i < length; i++) {\r\n        out += char;\r\n    }\r\n    return out;\r\n};\r\n\r\nconst maxArrayStringLength = function (array) {\r\n    let slen = 0;\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (array[i].length > slen) {\r\n            slen = array[i].length;\r\n        }\r\n    }\r\n    return slen;\r\n};\r\n\r\n//noinspection UnnecessaryLocalVariableJS\r\nconst EnglishDateLocale = /** @type {MaskedInput~DateLocale} */ {\r\n    MMM: [\r\n        'Jan', 'Feb', 'Mar',\r\n        'Apr', 'May', 'Jun',\r\n        'Jul', 'Aug', 'Sep',\r\n        'Oct', 'Nov', 'Dec',\r\n    ],\r\n    MMMM: [\r\n        'January', 'February', 'March',\r\n        'April', 'May', 'June',\r\n        'July', 'August', 'September',\r\n        'October', 'November', 'December',\r\n    ],\r\n    t: ['a', 'p'],\r\n    tt: ['am', 'pm'],\r\n    T: ['A', 'P'],\r\n    TT: ['AM', 'PM'],\r\n    aria: {\r\n        day: 'Day',\r\n        month: 'Month',\r\n        year: 'Year',\r\n        hour: 'Hour',\r\n        minutes: 'Minutes',\r\n        seconds: 'Seconds',\r\n        ampm: 'Am/Pm',\r\n    },\r\n};\r\n\r\nMaskedInput.defaults.dateLocale = EnglishDateLocale;\r\n\r\nconst DATE_PATTERN_MAP = {\r\n    // d - 1-31\r\n    // dd - 01-31\r\n    dd: {\r\n        pattern: /\\bdd?\\b/,\r\n        type: MaskedInput.PartType.NUMBER,\r\n        name: 'day',\r\n        maxLength: 2,\r\n        placeholder: function (match) {\r\n            return repeatChar('d', match.length);\r\n        },\r\n        numericMin: 0, // Allow typing in zeroes, like 06\r\n        numericMax: 31,\r\n        wholeNumber: true,\r\n        padding: function (match) {\r\n            return match.length;\r\n        },\r\n        postProcess: function (value) {\r\n            value = parseInt(value);\r\n            if (value < 1 || value > 31) return undefined;\r\n            return value + '';\r\n        },\r\n        ariaLabel: function (_match) {\r\n            return (this.option('dateLocale').aria || {}).day;\r\n        },\r\n    },\r\n    MM: {\r\n        // M - 1-12\r\n        // MM - 01-12\r\n        pattern: /\\bMM?\\b/,\r\n        type: MaskedInput.PartType.NUMBER,\r\n        name: 'month',\r\n        maxLength: 2,\r\n        placeholder: function (match) {\r\n            return repeatChar('m', match.length);\r\n        },\r\n        numericMin: 0, // Allow typing in zeroes, like 06\r\n        numericMax: 12,\r\n        wholeNumber: true,\r\n        padding: function (match) {\r\n            return match.length;\r\n        },\r\n        postProcess: function (value) {\r\n            value = parseInt(value);\r\n            if (value < 1 || value > 12) return undefined;\r\n            return value + '';\r\n        },\r\n        ariaLabel: function (_match) {\r\n            return (this.option('dateLocale').aria || {}).month;\r\n        },\r\n    },\r\n    MMM: {\r\n        // MMM - Jan-Dec\r\n        pattern: /\\bMMM\\b/,\r\n        type: MaskedInput.PartType.TEXT,\r\n        name: 'month',\r\n        placeholder: function (match) {\r\n            return repeatChar('m', match.length);\r\n        },\r\n        length: function (match) {\r\n            return maxArrayStringLength(this.option('dateLocale')[match]);\r\n        },\r\n        options: function (match) {\r\n            return this.option('dateLocale')[match];\r\n        },\r\n        ariaLabel: function (_match) {\r\n            return (this.option('dateLocale').aria || {}).month;\r\n        },\r\n    },\r\n    MMMM: {\r\n        // MMMM - January-December\r\n        pattern: /\\bMMMM\\b/,\r\n        type: MaskedInput.PartType.TEXT,\r\n        name: 'month',\r\n        placeholder: function (match) {\r\n            return repeatChar('m', match.length);\r\n        },\r\n        length: function (match) {\r\n            return maxArrayStringLength(this.option('dateLocale')[match]);\r\n        },\r\n        options: function (match) {\r\n            return this.option('dateLocale')[match];\r\n        },\r\n        ariaLabel: function (_match) {\r\n            return (this.option('dateLocale').aria || {}).month;\r\n        },\r\n    },\r\n    yyyy: {\r\n        // yy - 85\r\n        // yyyy - 1985\r\n        pattern: /\\byy(?:yy)?\\b/,\r\n        type: MaskedInput.PartType.NUMBER,\r\n        name: 'year',\r\n        wholeNumber: true,\r\n        placeholder: function (match) {\r\n            return repeatChar('y', match.length);\r\n        },\r\n        maxLength: function (match) {\r\n            return match.length;\r\n        },\r\n        postProcess: function (value, part) {\r\n\r\n            if (part.maxLength === 4) {\r\n                const baseYear = Math.floor((new Date()).getFullYear() / 100) * 100;\r\n                const nowYear = new Date().getFullYear();\r\n\r\n                let year = parseInt(value, 10);\r\n\r\n                if (year < 100) {\r\n                    year += baseYear;\r\n                    if (year - nowYear > 50) {\r\n                        year -= 100;\r\n                    } else if (nowYear - year > 50) {\r\n                        year += 100;\r\n                    }\r\n                }\r\n\r\n                return year + '';\r\n            } else {\r\n\r\n                return value;\r\n            }\r\n        },\r\n        padding: function (match) {\r\n            return match.length;\r\n        },\r\n        ariaLabel: function (_match) {\r\n            return (this.option('dateLocale').aria || {}).year;\r\n        },\r\n    },\r\n    HH: {\r\n        // H - 0-24\r\n        // HH - 00-24\r\n        pattern: /\\bHH?\\b/,\r\n        type: MaskedInput.PartType.NUMBER,\r\n        name: 'hours',\r\n        maxLength: 2,\r\n        placeholder: function (match) {\r\n            return repeatChar('h', match.length);\r\n        },\r\n        numericMin: 0,\r\n        numericMax: 23,\r\n        wholeNumber: true,\r\n        padding: function (match) {\r\n            return match.length;\r\n        },\r\n        ariaLabel: function (_match) {\r\n            return (this.option('dateLocale').aria || {}).hour;\r\n        },\r\n    },\r\n    hh: {\r\n        // h - 1-12\r\n        // hh - 01-12\r\n        pattern: /\\bhh?\\b/,\r\n        type: MaskedInput.PartType.NUMBER,\r\n        name: 'hours_12',\r\n        maxLength: 2,\r\n        placeholder: function (match) {\r\n            return repeatChar('h', match.length);\r\n        },\r\n        numericMin: 1,\r\n        numericMax: 12,\r\n        wholeNumber: true,\r\n        padding: function (match) {\r\n            return match.length;\r\n        },\r\n        ariaLabel: function (_match) {\r\n            return (this.option('dateLocale').aria || {}).hour;\r\n        },\r\n    },\r\n    mm: {\r\n        // m - 0-59\r\n        // mm - 00-59\r\n        pattern: /\\bmm?\\b/,\r\n        type: MaskedInput.PartType.NUMBER,\r\n        name: 'minutes',\r\n        maxLength: 2,\r\n        placeholder: function (match) {\r\n            return repeatChar('m', match.length);\r\n        },\r\n        numericMin: 0,\r\n        numericMax: 59,\r\n        wholeNumber: true,\r\n        padding: function (match) {\r\n            return match.length;\r\n        },\r\n        ariaLabel: function (_match) {\r\n            return (this.option('dateLocale').aria || {}).minutes;\r\n        },\r\n    },\r\n    ss: {\r\n        // s - 0-59\r\n        // ss - 00-59\r\n        pattern: /\\bss?\\b/,\r\n        type: MaskedInput.PartType.NUMBER,\r\n        name: 'seconds',\r\n        maxLength: 2,\r\n        placeholder: function (match) {\r\n            return repeatChar('s', match.length);\r\n        },\r\n        numericMin: 0,\r\n        numericMax: 59,\r\n        wholeNumber: true,\r\n        padding: function (match) {\r\n            return match.length;\r\n        },\r\n        ariaLabel: function (_match) {\r\n            return (this.option('dateLocale').aria || {}).seconds;\r\n        },\r\n    },\r\n    tt: {\r\n        // t - a/p\r\n        // tt - am/pm\r\n        // T - A/P\r\n        // TT - AM/PM\r\n        pattern: /\\btt?|TT?\\b/,\r\n        type: MaskedInput.PartType.TEXT,\r\n        name: 'ampm',\r\n        length: function (match) {\r\n            return maxArrayStringLength(this.option('dateLocale')[match]);\r\n        },\r\n        options: function (match) {\r\n            return this.option('dateLocale')[match];\r\n        },\r\n        defaultValue: function (match) {\r\n            return this.option('dateLocale')[match][0];\r\n        },\r\n        ariaLabel: function (_match) {\r\n            return (this.option('dateLocale').aria || {}).ampm;\r\n        },\r\n    },\r\n};\r\n\r\nMaskedInput.patternAddons.push(DATE_PATTERN_MAP);\r\n\r\nexport default MaskedInput;\r\n"],"names":["PartType","NUMBER","TEXT","LABEL","defaults","patterns","execRegexWithLeftovers","regex","input","onMatch","onLeftover","match","lastIndex","exec","index","substring","length","getSelectionRange","el","begin","end","direction","setSelectionRange","selectionStart","selectionEnd","selectionDirection","document","selection","createRange","range","duplicate","moveStart","text","arguments","undefined","createTextRange","collapse","moveEnd","select","repeatChar","char","out","i","findMatchInArray","options","term","closestChoice","returnFullMatch","caseSensitive","option","optionLower","termLower","toLowerCase","maxMatchLength","maxMatchOption","maxMatchFullOption","clen","Math","min","substr","escapeRegExp","str","replace","closestToOffset","elements","offset","x","left","y","top","bestMatch","minDistance","$el","$","elOffset","right","outerWidth","bottom","outerHeight","offsets","o","dx","dy","distance","sqrt","callFunctor","functor","bind","_arg1","apply","Array","prototype","slice","call","inputBackbufferCssProps","hasComputedStyle","defaultView","getComputedStyle","getPreciseContentWidth","style","currentStyle","width","parseFloat","FOCUSABLES","FOCUSABLE_SELECTOR","join","TABBABLE_SELECTOR","map","KEY_ENTER","KEY_ARROW_UP","KEY_ARROW_DOWN","KEY_ARROW_LEFT","KEY_ARROW_RIGHT","MaskedInput","constructor","extend","patternAddons","forEach","addon","p","enabled","inputs","addClass","className","data","parsed","_parseFormat","format","$inputBackBuffer","on","event","target","currentTarget","is","offsetX","offsetY","children","focus","render","setTimeout","parentNode","resize","parsedFormat","FORMAT_REGEX","numericMatch","textMatch","quotedMatch","part","type","indexOf","name","maxLength","push","labelText","leftover","leftoverParts","Object","keys","key","RegExp","pattern","source","flags","fpos","fpart","newParts","validator","ignored","ariaLabel","placeholder","numericMin","numericMax","wholeNumber","postProcess","padding","required","defaultValue","forcePlaceholderWidth","splice","concat","empty","_renderText","appendTo","$input","_renderInput","parseInt","toString","isNewInput","prop","setAttribute","removeAttribute","_handleInput","_syncInputSizeForPart","_handleKeydown","_handleKeypress","_syncInputSize","alwaysConsiderPlaceholder","fallbackText","$backBuffer","inputEl","value","css","backBufferWidth","currentWidth","max","scrollWidth","remove","content","validatedContent","_validateContent","preventDefault","trigger","_shouldMoveToNextFieldAfterInput","nextAll","first","readOnly","keycode","which","triggerChange","contentBefore","nextValue","tryToUpdate","minLen","maxLen","fullMatch","round","Infinity","isRtl","prevAll","pos","ctrlKey","altKey","metaKey","moveToNextField","pressedChar","String","fromCharCode","contentAfter","newPos","newContent","test","ret","parsedValue","isNaN","field","isArray","_valuePattern","group","_fieldValue","newValue","validatedValue","fieldValue","_fieldOption","HTMLElement","fieldOption","that","inputEls","valueRegex","pi","matches","val","enable","attr","find","disable","disabled","isEnabled","isDisabled","maxArrayStringLength","array","slen","EnglishDateLocale","MMM","MMMM","t","tt","T","TT","aria","day","month","year","hour","minutes","seconds","ampm","dateLocale","DATE_PATTERN_MAP","dd","_match","MM","yyyy","baseYear","floor","Date","getFullYear","nowYear","HH","hh","mm","ss"],"mappings":"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"}